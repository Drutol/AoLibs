<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AoLibs.Dialogs.Core</name>
    </assembly>
    <members>
        <member name="M:AoLibs.Dialogs.Core.CachedCustomDialogProvider`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AoLibs.Dialogs.Core.CachedCustomDialogProvider`1"/> class.
            Creates new instance, the page will be created using <see cref="M:System.Activator.CreateInstance``1"/>, be sure it can be instantinated this way.
            </summary>
        </member>
        <member name="M:AoLibs.Dialogs.Core.CachedCustomDialogProvider`1.#ctor(`0,System.Func{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:AoLibs.Dialogs.Core.CachedCustomDialogProvider`1"/> class.
            Creates new instance setting up the provider with provided page.
            </summary>
            <param name="instance">Dialog to be used by provider.</param>
            <param name="factory">Optional factory to reinstantinate the page if need arises. <see cref="M:System.Activator.CreateInstance``1"/> will be used if null.</param>
        </member>
        <member name="P:AoLibs.Dialogs.Core.CachedCustomDialogProvider`1.Dialog">
            <summary>
            Gets instance of held page.
            </summary>
        </member>
        <member name="T:AoLibs.Dialogs.Core.CustomDialogConfig">
            <summary>
            Defines shared config of dialog.
            </summary>
        </member>
        <member name="T:AoLibs.Dialogs.Core.CustomDialogConfig.DialogGravity">
            <summary>
            Flags enum allowing to define dialogs position on screen.
            </summary>
        </member>
        <member name="P:AoLibs.Dialogs.Core.CustomDialogConfig.Gravity">
            <summary>
            Gets or sets the gravity, position on screen of the dialog. The <see cref="T:AoLibs.Dialogs.Core.CustomDialogConfig.DialogGravity"/> is a bitfield.
            </summary>
        </member>
        <member name="P:AoLibs.Dialogs.Core.CustomDialogConfig.StretchHorizontally">
            <summary>
            Gets or sets a value indicating whether to stretch the dialog container horizontally.
            </summary>
        </member>
        <member name="P:AoLibs.Dialogs.Core.CustomDialogConfig.StretchVertically">
            <summary>
            Gets or sets a value indicating whether to stretch the dialog container vertically.
            </summary>
        </member>
        <member name="P:AoLibs.Dialogs.Core.CustomDialogConfig.IsCancellable">
            <summary>
            Gets or sets a value indicating whether the dialog can be cancelled manually by the user.
            </summary>
        </member>
        <member name="T:AoLibs.Dialogs.Core.CustomDialogsManagerBase`1">
            <summary>
            Base implementation of <see cref="T:AoLibs.Dialogs.Core.Interfaces.ICustomDialogsManager`1"/>
            </summary>
            <typeparam name="TDialogIndex">Enum defining dialog pages.</typeparam>
        </member>
        <member name="M:AoLibs.Dialogs.Core.CustomDialogsManagerBase`1.#ctor(System.Collections.Generic.Dictionary{`0,AoLibs.Dialogs.Core.Interfaces.ICustomDialogProvider})">
            <summary>
            Initializes a new instance of the <see cref="T:AoLibs.Dialogs.Core.CustomDialogsManagerBase`1"/> class.
            </summary>
            <param name="dialogsDictionary">Dictionary defining all dialogs that will be used in the application.</param>
        </member>
        <member name="P:AoLibs.Dialogs.Core.CustomDialogsManagerBase`1.Item(`0)">
            <summary>
            Gets the dialog associated with given <see cref="!:dialog"/>
            </summary>
            <param name="dialog">The dialog type to retrieve.</param>
        </member>
        <member name="T:AoLibs.Dialogs.Core.CustomDialogViewModelBase">
            <summary>
            Base ViewModel to be used for dialogs.
            </summary>
        </member>
        <member name="P:AoLibs.Dialogs.Core.CustomDialogViewModelBase.CustomDialogConfig">
            <summary>
            Gets the config used for dialog definition.
            </summary>
        </member>
        <member name="P:AoLibs.Dialogs.Core.CustomDialogViewModelBase.Dialog">
            <summary>
            Gets or sets instance associated with this ViewModel.
            </summary>
        </member>
        <member name="M:AoLibs.Dialogs.Core.CustomDialogViewModelBase.OnDialogAppearedInternal">
            <summary>
            Internal callback for when the dialog appears.
            </summary>
        </member>
        <member name="M:AoLibs.Dialogs.Core.CustomDialogViewModelBase.OnDialogDismissedInternal">
            <summary>
            Internal callback for when the dialog is dismissed.
            </summary>
        </member>
        <member name="M:AoLibs.Dialogs.Core.CustomDialogViewModelBase.OnDialogAppeared">
            <summary>
            Callback for when the dialog appears.
            </summary>
        </member>
        <member name="M:AoLibs.Dialogs.Core.CustomDialogViewModelBase.OnDialogDismissed">
            <summary>
            Callback for when the dialog is dismissed.
            </summary>
        </member>
        <member name="T:AoLibs.Dialogs.Core.CustomDialogViewModelWithParameterBase`1">
            <summary>
            Utility ViewModel for dialogs with typed <see cref="!:TParameter"/>
            </summary>
            <typeparam name="TParameter">The type of used parameter for given dialog.</typeparam>
        </member>
        <member name="M:AoLibs.Dialogs.Core.CustomDialogViewModelWithParameterBase`1.OnDialogAppearedInternal">
            <inheritdoc />
        </member>
        <member name="M:AoLibs.Dialogs.Core.CustomDialogViewModelWithParameterBase`1.OnDialogAppeared(`0)">
            <summary>
            Callback for when the dialog appears.
            </summary>
            <param name="parameter">Passed parameter when the dialog was invoked.</param>
        </member>
        <member name="T:AoLibs.Dialogs.Core.OneshotCustomDialogProvider`1">
            <summary>
            Dialog provider always returning new dialog instance.
            </summary>
            <typeparam name="TDialog">Dialog type</typeparam>
        </member>
        <member name="P:AoLibs.Dialogs.Core.OneshotCustomDialogProvider`1.Factory">
            <summary>
            Gets or sets factory used to create new dialog instances.
            </summary>
        </member>
        <member name="M:AoLibs.Dialogs.Core.OneshotCustomDialogProvider`1.#ctor(System.Func{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:AoLibs.Dialogs.Core.OneshotCustomDialogProvider`1"/> class.
            </summary>
            <param name="factory">Factory used to build actual dialog.</param>
        </member>
        <member name="M:AoLibs.Dialogs.Core.OneshotCustomDialogProvider`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AoLibs.Dialogs.Core.OneshotCustomDialogProvider`1"/> class.
            <see cref="M:System.Activator.CreateInstance``1"/> will be used for instantiation.
            </summary>
        </member>
        <member name="P:AoLibs.Dialogs.Core.OneshotCustomDialogProvider`1.Dialog">
            <summary>
            Gets instance of held page.
            </summary>
        </member>
        <member name="T:AoLibs.Dialogs.Core.Interfaces.ICustomDialog">
            <summary>
            Base interface defining basic actions on cross-platform dialog.
            </summary>
        </member>
        <member name="E:AoLibs.Dialogs.Core.Interfaces.ICustomDialog.DialogShown">
            <summary>
            Fired when dialog is shown.
            </summary>
        </member>
        <member name="E:AoLibs.Dialogs.Core.Interfaces.ICustomDialog.DialogHidden">
            <summary>
            Fired when dialog is hidden.
            </summary>
        </member>
        <member name="P:AoLibs.Dialogs.Core.Interfaces.ICustomDialog.Parameter">
            <summary>
            Gets or sets a parameter with which the dialog was run.
            </summary>
        </member>
        <member name="M:AoLibs.Dialogs.Core.Interfaces.ICustomDialog.Show(System.Object)">
            <summary>
            Shows the dialog.
            </summary>
            <param name="parameter">Additional parameter that can be retrieved later within the dialog and ViewModel.</param>
        </member>
        <member name="M:AoLibs.Dialogs.Core.Interfaces.ICustomDialog.Hide">
            <summary>
            Hides the dialog.
            </summary>
        </member>
        <member name="M:AoLibs.Dialogs.Core.Interfaces.ICustomDialog.ShowAsync(System.Object)">
            <summary>
            Shows the dialog asynchronously.
            </summary>
            <param name="parameter">Additional parameter that can be retrieved later within the dialog and ViewModel.</param>
        </member>
        <member name="M:AoLibs.Dialogs.Core.Interfaces.ICustomDialog.HideAsync">
            <summary>
            Hides the dialog asynchronously.
            </summary>
        </member>
        <member name="M:AoLibs.Dialogs.Core.Interfaces.ICustomDialog.AwaitResult``1(System.Threading.CancellationToken)">
            <summary>
            Awaits dialog result.
            </summary>
            <typeparam name="TResult">Desired return type.</typeparam>
            <param name="token">Cancellation token.</param>
        </member>
        <member name="T:AoLibs.Dialogs.Core.Interfaces.ICustomDialogForViewModel">
            <summary>
            Extended dialog interface for providing result oriented methods to ViewModel.
            </summary>
        </member>
        <member name="M:AoLibs.Dialogs.Core.Interfaces.ICustomDialogForViewModel.SetResult(System.Object)">
            <summary>
            Sets the dialog result.
            </summary>
            <param name="result">Result.</param>
        </member>
        <member name="M:AoLibs.Dialogs.Core.Interfaces.ICustomDialogForViewModel.CancelResult">
            <summary>
            Cancels awaiting dialog's result.
            </summary>
        </member>
        <member name="T:AoLibs.Dialogs.Core.Interfaces.ICustomDialogProvider">
            <summary>
            Interface used for defining dialog providers.
            </summary>
        </member>
        <member name="P:AoLibs.Dialogs.Core.Interfaces.ICustomDialogProvider.Dialog">
            <summary>
            Gets the dialog instance.
            </summary>
        </member>
        <member name="T:AoLibs.Dialogs.Core.Interfaces.ICustomDialogsManager">
            <summary>
            Base non-generic interface for custom dialogs manager.
            </summary>
        </member>
        <member name="P:AoLibs.Dialogs.Core.Interfaces.ICustomDialogsManager.CurrentlyDisplayedDialog">
            <summary>
            Gets currently displayed dialog, null if none is presented.
            </summary>
        </member>
        <member name="T:AoLibs.Dialogs.Core.Interfaces.ICustomDialogsManager`1">
            <summary>
            Interface for defining dialogs manager.
            </summary>
            <typeparam name="TDialogIndex">Enum defining dialog types.</typeparam>
        </member>
        <member name="P:AoLibs.Dialogs.Core.Interfaces.ICustomDialogsManager`1.Item(`0)">
            <summary>
            Gets dialog associated with given argument.
            </summary>
            <param name="dialog">The dialog type to retrieve.</param>
        </member>
        <member name="T:AoLibs.Dialogs.Core.Interfaces.ICustomDialogViewModelResolver">
            <summary>
            Interface used to define component allowing to retrieve given ViewModel.
            </summary>
        </member>
        <member name="M:AoLibs.Dialogs.Core.Interfaces.ICustomDialogViewModelResolver.Resolve``1">
            <summary>
            Resolves ViewModel for given type.
            </summary>
            <typeparam name="TViewModel">ViewModel type to resolve.</typeparam>
        </member>
        <member name="T:AoLibs.Dialogs.Core.Interfaces.ICustomViewModelDialog`1">
            <summary>
            Dialog with ViewModel
            </summary>
            <typeparam name="TViewModel">The type of ViewModel.</typeparam>
        </member>
        <member name="P:AoLibs.Dialogs.Core.Interfaces.ICustomViewModelDialog`1.ViewModel">
            <summary>
            Gets the ViewModel.
            </summary>
        </member>
    </members>
</doc>
